#!/usr/bin/env python3
"""
–î–∞—à–±–æ—Ä–¥ —Å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ –≥—Ä–∞—Ñ–∏–∫–∞–º–∏ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –≤–∏–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏, –Ω–æ —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
"""

import pandas as pd
import json
import csv
from datetime import datetime, timedelta, timezone
import os
import re
from urllib.parse import urlparse, parse_qs
from offer_visibility_manager import OfferVisibilityManager

def generate_inline_charts_dashboard_with_visibility_filter(data_file: str = 'data/travel_prices.csv', 
                                                          output_file: str = 'index.html', 
                                                          title: str = 'Travel Price Monitor ‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –¥–∞—à–±–æ—Ä–¥', 
                                                          charts_subdir: str = 'hotel-charts', 
                                                          tz: str = 'Europe/Warsaw', 
                                                          alerts_file: str = None, 
                                                          all_airports_data_file: str = None, 
                                                          airport_comparison_file: str = None):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–∞—à–±–æ—Ä–¥ —Å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ –≥—Ä–∞—Ñ–∏–∫–∞–º–∏ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –≤–∏–¥–∏–º–æ—Å—Ç–∏"""
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –≤–∏–¥–∏–º–æ—Å—Ç–∏
    visibility_manager = OfferVisibilityManager(data_file)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    try:
        df = pd.read_csv(data_file, quoting=csv.QUOTE_ALL, on_bad_lines='skip')
        # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –≤—Ä–µ–º—è: –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–º–µ—à–∞–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ (—Å/–±–µ–∑ —Ç–∞–π–º–∑–æ–Ω—ã)
        raw = df['scraped_at'].astype(str)
        mask_tz = raw.str.contains(r"Z$|[+-]\d{2}:\d{2}$", regex=True)
        tz_series = pd.to_datetime(raw.where(mask_tz), errors='coerce', utc=True)
        tz_series = tz_series.dt.tz_convert(tz)
        naive_series = pd.to_datetime(raw.where(~mask_tz), errors='coerce')
        try:
            naive_series = naive_series.dt.tz_localize(tz)
        except Exception:
            # –ï—Å–ª–∏ —á–∞—Å—Ç—å —É–∂–µ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ tz-aware/NaT ‚Äî –æ—Å—Ç–∞–≤–∏–º –∫–∞–∫ –µ—Å—Ç—å
            pass
        df['scraped_at_local'] = tz_series.combine_first(naive_series)
        # –£–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫–∏ —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –¥–∞—Ç–æ–π
        df = df.dropna(subset=['scraped_at_local'])
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–¥–≤–∏–≥–æ–≤
        df['scraped_at_display'] = df['scraped_at_local']
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(df)} –∑–∞–ø–∏—Å–µ–π")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ä–∞–Ω–∞
    print("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π...")
    visibility_manager.update_visibility(df)
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ, –æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ –≤–∏–¥–∏–º—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    print("üîç –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –≤–∏–¥–∏–º—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π...")
    df_visible = visibility_manager.filter_visible_offers(df)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤–∏–¥–∏–º–æ—Å—Ç–∏
    visibility_stats = visibility_manager.get_visibility_stats()
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏: {visibility_stats['visible_count']} –≤–∏–¥–∏–º—ã—Ö, {visibility_stats['hidden_count']} —Å–∫—Ä—ã—Ç—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π")
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞—à–±–æ—Ä–¥–∞
    df = df_visible
    
    # –û—Ç–∫–∞—Ç —Ñ–∏—á–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤: –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—â–∏–π –¥–∞—Ç–∞—Å–µ—Ç
    df_all_airports = None
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤
    airport_comparison_data = None
    if airport_comparison_file and os.path.exists(airport_comparison_file):
        try:
            with open(airport_comparison_file, 'r', encoding='utf-8') as f:
                airport_comparison_data = json.load(f)
            print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤: {e}")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤—Å–µ—Ö –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if all_airports_data_file and os.path.exists(all_airports_data_file):
        try:
            df_all_airports = pd.read_csv(all_airports_data_file, quoting=csv.QUOTE_ALL, on_bad_lines='skip')
            # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç—É –∂–µ –æ–±—Ä–∞–±–æ—Ç–∫—É –≤—Ä–µ–º–µ–Ω–∏
            raw_all = df_all_airports['scraped_at'].astype(str)
            mask_tz_all = raw_all.str.contains(r"Z$|[+-]\d{2}:\d{2}$", regex=True)
            tz_series_all = pd.to_datetime(raw_all.where(mask_tz_all), errors='coerce', utc=True)
            tz_series_all = tz_series_all.dt.tz_convert(tz)
            naive_series_all = pd.to_datetime(raw_all.where(~mask_tz_all), errors='coerce')
            try:
                naive_series_all = naive_series_all.dt.tz_localize(tz)
            except Exception:
                pass
            df_all_airports['scraped_at_local'] = tz_series_all.combine_first(naive_series_all)
            df_all_airports = df_all_airports.dropna(subset=['scraped_at_local'])
            df_all_airports['scraped_at_display'] = df_all_airports['scraped_at_local']
            
            # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∏ –∫ –¥–∞–Ω–Ω—ã–º –≤—Å–µ—Ö –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤
            df_all_airports_visible = visibility_manager.filter_visible_offers(df_all_airports)
            print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –≤—Å–µ—Ö –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤: {len(df_all_airports_visible)} –≤–∏–¥–∏–º—ã—Ö –∑–∞–ø–∏—Å–µ–π")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤—Å–µ—Ö –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤: {e}")
            df_all_airports = None
    
    # –¢–µ–ø–µ—Ä—å –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞—à–±–æ—Ä–¥–∞
    # –Ω–æ —Å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    from generate_inline_charts_dashboard_with_airport_comparison_final import generate_inline_charts_dashboard
    
    # –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    generate_inline_charts_dashboard(
        data_file=data_file,  # –ü–µ—Ä–µ–¥–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª, –Ω–æ df —É–∂–µ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω
        output_file=output_file,
        title=title,
        charts_subdir=charts_subdir,
        tz=tz,
        alerts_file=alerts_file,
        all_airports_data_file=all_airports_data_file,
        airport_comparison_file=airport_comparison_file
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫
    add_visibility_info_to_dashboard(output_file, visibility_stats)

def add_visibility_info_to_dashboard(dashboard_file: str, visibility_stats: dict):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –≤ –¥–∞—à–±–æ—Ä–¥"""
    try:
        with open(dashboard_file, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ù–∞—Ö–æ–¥–∏–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
        visibility_info = f"""
        <div style="background: #e8f4fd; border: 1px solid #b3d9ff; border-radius: 8px; padding: 15px; margin: 20px 0; font-size: 0.9em;">
            <strong>üîç –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –≤–∏–¥–∏–º–æ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π:</strong> 
            –ü–æ–∫–∞–∑–∞–Ω—ã —Ç–æ–ª—å–∫–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è ({visibility_stats['visible_count']} –≤–∏–¥–∏–º—ã—Ö, {visibility_stats['hidden_count']} —Å–∫—Ä—ã—Ç—ã—Ö). 
            –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∑–∞–ø—É—Å–∫–µ, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã—Ç—ã.
        </div>
        """
        
        # –í—Å—Ç–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        if '<h1' in content:
            content = content.replace('<h1', visibility_info + '<h1', 1)
        else:
            # –ï—Å–ª–∏ –Ω–µ—Ç h1, –¥–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ body
            content = content.replace('<body>', '<body>' + visibility_info, 1)
        
        with open(dashboard_file, 'w', encoding='utf-8') as f:
            f.write(content)
            
        print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –≤ –¥–∞—à–±–æ—Ä–¥")
        
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–∏–º–æ—Å—Ç–∏: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    import sys
    
    data_file = sys.argv[1] if len(sys.argv) > 1 else 'data/travel_prices.csv'
    output_file = sys.argv[2] if len(sys.argv) > 2 else 'index_with_visibility_filter.html'
    
    print(f"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞—à–±–æ—Ä–¥–∞ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –≤–∏–¥–∏–º–æ—Å—Ç–∏...")
    print(f"–î–∞–Ω–Ω—ã–µ: {data_file}")
    print(f"–í—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª: {output_file}")
    
    generate_inline_charts_dashboard_with_visibility_filter(
        data_file=data_file,
        output_file=output_file,
        title="Travel Price Monitor ‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –¥–∞—à–±–æ—Ä–¥"
    )

if __name__ == "__main__":
    main()
