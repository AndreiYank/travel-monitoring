name: Travel Price Monitor with Visibility Filter

on:
  schedule:
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–∞–∂–¥—ã–π —á–∞—Å
    - cron: "0 * * * *"
  workflow_dispatch: # –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å –≤—Ä—É—á–Ω—É—é
  push:
    branches: [ main, feature/dynamic-offers-visibility ]

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "travel-monitor-filter"
  cancel-in-progress: false

jobs:
  monitor-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements_dashboard.txt

      - name: Run monitoring with visibility filter
        run: |
          echo "üîÑ –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –≤–∏–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π..."
          python run_monitoring_with_visibility_filter.py

      - name: Generate main dashboard with visibility filter
        run: |
          echo "üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –¥–∞—à–±–æ—Ä–¥–∞ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –≤–∏–¥–∏–º–æ—Å—Ç–∏..."
          if [ -f "data/travel_prices.csv" ]; then
            python generate_inline_charts_dashboard_with_visibility_filter.py \
              "data/travel_prices.csv" \
              "index.html"
          fi

      - name: Generate country dashboards with visibility filter
        run: |
          echo "üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞—à–±–æ—Ä–¥–æ–≤ —Å—Ç—Ä–∞–Ω —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –≤–∏–¥–∏–º–æ—Å—Ç–∏..."
          for country in greece egypt turkey; do
            if [ -f "data/${country}_travel_prices.csv" ]; then
              echo "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞—à–±–æ—Ä–¥–∞ –¥–ª—è $country..."
              python generate_inline_charts_dashboard_with_visibility_filter.py \
                "data/${country}_travel_prices.csv" \
                "index_${country}.html"
            fi
          done

      - name: Generate landing page
        run: |
          echo "üè† –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã..."
          python generate_landing.py

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã
          git add -f data/*_travel_prices.csv || true
          git add -f data/*_airport_comparison.json || true
          git add -f data/*_any_airports.csv || true
          git add -f data/offer_visibility_state.json || true
          git add -f index.html || true
          git add -f index_*.html || true
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è –∫–æ–º–º–∏—Ç–∞
          if git diff --staged --quiet; then
            echo "–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"
          else
            git commit -m "üîÑ Hourly update with visibility filter - $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
            git push
          fi

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./
          exclude_assets: |
            .git
            .github
            *.py
            *.md
            *.txt
            *.json
            *.log
            data/
            hotel-charts/
            .venv/
            __pycache__/
            *.pyc
            .gitignore
            .cursorignore
