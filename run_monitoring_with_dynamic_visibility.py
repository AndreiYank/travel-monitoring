#!/usr/bin/env python3
"""
–ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –≤–∏–¥–∏–º–æ—Å—Ç—å—é –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
"""

import os
import sys
import subprocess
import json
from datetime import datetime
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def run_monitoring_for_country(country: str, config_file: str):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç—Ä–∞–Ω—ã"""
    logger.info(f"üîÑ –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–ª—è {country}...")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º travel_monitor.py —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
        result = subprocess.run([
            sys.executable, 'travel_monitor.py', 
            '--config', config_file,
            '--data-file', f'{country}_travel_prices.csv'
        ], capture_output=True, text=True, timeout=300)
        
        if result.returncode == 0:
            logger.info(f"‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ {country} –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            return True
        else:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ {country}: {result.stderr}")
            return False
            
    except subprocess.TimeoutExpired:
        logger.error(f"‚è∞ –¢–∞–π–º–∞—É—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ {country}")
        return False
    except Exception as e:
        logger.error(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ {country}: {e}")
        return False

def generate_dashboards_with_visibility():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–∞—à–±–æ—Ä–¥—ã —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –≤–∏–¥–∏–º–æ—Å—Ç—å—é –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω"""
    countries = ['greece', 'egypt', 'turkey']
    
    for country in countries:
        data_file = f'data/{country}_travel_prices.csv'
        if os.path.exists(data_file):
            logger.info(f"üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞—à–±–æ—Ä–¥–∞ –¥–ª—è {country}...")
            
            try:
                result = subprocess.run([
                    sys.executable, 'generate_dashboard_with_dynamic_visibility.py',
                    data_file,
                    f'index_{country}_dynamic.html'
                ], capture_output=True, text=True, timeout=60)
                
                if result.returncode == 0:
                    logger.info(f"‚úÖ –î–∞—à–±–æ—Ä–¥ {country} —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω")
                else:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞—à–±–æ—Ä–¥–∞ {country}: {result.stderr}")
                    
            except Exception as e:
                logger.error(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞—à–±–æ—Ä–¥–∞ {country}: {e}")
        else:
            logger.warning(f"‚ö†Ô∏è –§–∞–π–ª –¥–∞–Ω–Ω—ã—Ö {data_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –≤–∏–¥–∏–º–æ—Å—Ç—å—é –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π")
    
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    configs = {
        'greece': 'config.json',
        'egypt': 'config_egypt.json', 
        'turkey': 'config_turkey.json'
    }
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω—ã
    successful_runs = 0
    for country, config_file in configs.items():
        if os.path.exists(config_file):
            if run_monitoring_for_country(country, config_file):
                successful_runs += 1
        else:
            logger.warning(f"‚ö†Ô∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª {config_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    logger.info(f"üìà –£—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ {successful_runs} –∏–∑ {len(configs)} –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–≤")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞—à–±–æ—Ä–¥—ã —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –≤–∏–¥–∏–º–æ—Å—Ç—å—é
    generate_dashboards_with_visibility()
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–±—â–∏–π –¥–∞—à–±–æ—Ä–¥
    try:
        logger.info("üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–±—â–µ–≥–æ –¥–∞—à–±–æ—Ä–¥–∞...")
        result = subprocess.run([
            sys.executable, 'generate_dashboard_with_dynamic_visibility.py',
            'data/travel_prices.csv',
            'index_dynamic_visibility.html'
        ], capture_output=True, text=True, timeout=60)
        
        if result.returncode == 0:
            logger.info("‚úÖ –û–±—â–∏–π –¥–∞—à–±–æ—Ä–¥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω")
        else:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–±—â–µ–≥–æ –¥–∞—à–±–æ—Ä–¥–∞: {result.stderr}")
            
    except Exception as e:
        logger.error(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–±—â–µ–≥–æ –¥–∞—à–±–æ—Ä–¥–∞: {e}")
    
    logger.info("üéâ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –≤–∏–¥–∏–º–æ—Å—Ç—å—é –∑–∞–≤–µ—Ä—à–µ–Ω")

if __name__ == "__main__":
    main()
